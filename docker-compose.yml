version: "3.8"

services:
  postgres:
    image: postgres:latest
    container_name: kurye_postgres
    environment:
      POSTGRES_USER: kurye_user
      POSTGRES_PASSWORD: kurye_password
      POSTGRES_DB: kurye_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kurye_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kurye_user -d kurye_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./backend-master
      dockerfile: Dockerfile
    container_name: kurye_api
    environment:
      NODE_ENV: production
      PORT: 4000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: kurye_user
      DB_PASSWORD: kurye_password
      DB_DATABASE: kurye_db
      JWT_SECRET: your-super-secret-key-change-this-in-production
      JWT_EXPIRATION: 1d
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - kurye_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    name: kurye_postgres_data

networks:
  kurye_network:
    name: kurye_network
    driver: bridge
